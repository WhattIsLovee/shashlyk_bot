from aiogram import types, F, Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import Dispatcher

import keyboard as kb

import constants

from database_engine import session

from models.article import Article


router = Router()
dp = Dispatcher()


@router.message(Command('start'))
async def start_handler(msg: Message):
    await msg.answer('–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –í–∞–º –ø—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ —à–∞—à–ª—ã—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.', reply_markup = kb.menu_kb)
    await msg.answer(constants.MENU, reply_markup=kb.menu_kb)


@router.message(F.text == constants.MENU)
async def menu(msg: Message):
    await msg.answer('üëÄ –ö—É–¥–∞ —Ç–µ–ø–µ—Ä—å?', reply_markup = kb.menu_kb)


@router.message(F.text == constants.PICKLE_GUIDE)
async def pickle_handler(msg: Message):
    await msg.answer('‚Ä¢ü´ô –ú–∞—Ä–∏–Ω–∞–¥—ã ‚Äì –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–µ –±–æ—Ç–æ–º —Ä–µ—Ü–µ–ø—Ç—ã\n‚Ä¢üìí –ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã ‚Äì –∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã\n‚Ä¢‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ ‚Äì –í–∞—à–∏ –ª—é–±–∏–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –æ—Ç –±–æ—Ç–∞', reply_markup = kb.pickle_kb) 
    #–ü—Ä–æ–±–µ–ª—ã –Ω—É–∂–Ω—ã –¥–ª—è —Ä–æ–≤–Ω–æ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –±–æ—Ç–∞.


@router.message(F.text == constants.FRYING_GUIDE)
async def frying_handler(msg: Message):
    await msg.answer('‚Ä¢ü™µ –ì–∞–π–¥—ã –ø–æ –∂–∞—Ä–∫–µ ‚Äì –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–µ –±–æ—Ç–æ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞\n‚Ä¢üìí –ú–æ–∏ –≥–∞–π–¥—ã ‚Äì –∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –≥–∞–π–¥—ã\n‚Ä¢‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ ‚Äì –í–∞—à–∏ –ª—é–±–∏–º—ã–µ –≥–∞–π–¥—ã –æ—Ç –±–æ—Ç–∞', 
                     reply_markup = kb.frying_kb) 
    #–ü—Ä–æ–±–µ–ª—ã –Ω—É–∂–Ω—ã –¥–ª—è —Ä–æ–≤–Ω–æ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –±–æ—Ç–∞.


@router.message(F.text == constants.GALLERY)
async def gallery_handler(msg: Message):
    await msg.answer('üëçüèª –ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –í–∞—à–∏ —à–µ–¥–µ–≤—Ä—ã', reply_markup = kb.gallery_kb) 


@router.message(F.text == 'ü™µ –ì–∞–π–¥—ã –ø–æ –∂–∞—Ä–∫–µ')
async def frying_guides_handler(msg: Message):
    articles = session.query(Article).filter(Article.type == 'frying').all()
    articles_list_html = ''
    for i, article in enumerate(articles):
        articles_list_html += f'{i + 1}. <a href="{article.link}">{article.title}</a>\n'
    await msg.answer(articles_list_html, reply_markup = kb.frying_kb, disable_web_page_preview = True)
